// Complex function with nested control structures and expressions

fun calculateFactorial(n) {
  if (n <= 1) {
    return 1;
  } else {
    return n * calculateFactorial(n - 1);
  }
}

fun printFibonacci(limit) {
  var a = 0;
  var b = 1;
  var i = 0;
  
  while (i < limit) {
    print a;
    var temp = a + b;
    a = b;
    b = temp;
    i = i + 1;
  }
}

// Main program logic
var num = 5;
print "Factorial of";
print num;
print "is";
print calculateFactorial(num);

var fibLimit = 10;
print "Fibonacci sequence up to";
print fibLimit;
print "terms:";
printFibonacci(fibLimit);

// Testing complex expressions
var complexResult = (10 + 5) * 2 - 4 / 2;
print "Complex expression result:";
print complexResult;

// Testing logical operators
if ((num > 0 and num < 10) or (num == 5)) {
  print "Logical condition is true";
} else {
  print "Logical condition is false";
}